<?php

namespace Fobia\Base;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-06-22 at 10:12:39.
 */
class ApplicationTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var \Fobia\Base\Application
     */
    protected $app;

    /**
     *
     * @param array $envSettings
     * @param array $appSettings
     * @return \Fobia\Base\Application
     */
    protected function createApp(array $envSettings = array(), array $appSettings = array())
    {
        $envSettings = array_merge(array(
            'SCRIPT_NAME' => '/index.php',
            'REQUEST_URI' => '/foo/bar?one=foo&two=bar',
            'QUERY_STRING' => 'one=foo&two=bar',
        ), $envSettings);
        
        $r = include SYSPATH . '/app/config/config.php';
        $appSettings = array_merge($r, $appSettings);

        $app = new \Fobia\Base\Application($appSettings);

        $app['environment'] = function () use ($envSettings) {
            $env = new \Slim\Environment();
            $env->mock($envSettings);
            return $env;
        };

        return $app;
    }

    /**
     *
     * @param array $envSettings
     * @param array $appSettings
     */
    protected function initializeApp(array $envSettings = array(), array $appSettings = array())
    {
        $this->app = $this->createApp($envSettings, $appSettings);
    }

    /**
     *
     * @param string $path
     * @return array
     */
    protected  function createPath($path)
    {
        $arr = array(
            'REQUEST_URI'  => $path,
            'QUERY_STRING' => substr($path, strpos($path, '?') + 1) 
        );
        return $arr;
    }

    public function setUp()
    {
        // Remove environment mode if set
        unset($_ENV['SLIM_MODE']);

        // Reset session
        $_SESSION = array();

        // Initialize app
        $this->initializeApp();
    }

    /************************************************
     * INSTANTIATION
     * ********************************************** */

    /**
     * Test version constant is string
     */
    public function testHasVersionConstant()
    {
        $this->assertTrue(is_string(\Fobia\Base\Application::VERSION));
    }

    public function testDataBase()
    {
        $app = $this->app;
        $this->assertInstanceOf('\\PDO', $app->db);
        $this->assertRegExp('/5\.[\d]/', $app->db->getAttribute(\PDO::ATTR_CLIENT_VERSION));
    }

    /************************************************
     * SETTINGS
     * ********************************************** */

    public function dtestRoutePath()
    {
        $_POST = array(
            'var1' => 'value1',
            'var2' => 'value2'
        );
        $env = $this->createPath('/test/phpunit?r11=1');
        $_SERVER['REQUEST_METHOD'] = 'POST';

        $app = $this->createApp($env);
        dump($app->request->getMethod()
            ,$app->request->post()
                );
    }

    public function testMark()
    {
        $this->markTestIncomplete('----------');
    }
}