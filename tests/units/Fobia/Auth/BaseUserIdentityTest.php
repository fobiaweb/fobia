<?php
namespace Fobia\Auth;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-08-07 at 12:28:46.
 */
class BaseUserIdentityTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var BaseUserIdentity
     */
    protected $user;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        if (!\Fobia\Base\Application::getInstance()) {
            $app = \AppTest::create();
            $app->setName('default');
        }
        $db = \Fobia\Base\Application::getInstance()->db;
        $result = $db->query("SELECT * FROM users");
        $this->user = $result->fetchObject('\Fobia\Auth\BaseUserIdentity');
    }

    /**
     * @covers Fobia\Auth\BaseUserIdentity::getId
     * @todo   Implement testGetId().
     */
    public function testGetId()
    {
        $this->assertEquals(1, $this->user->getId());
    }

    /**
     * @covers Fobia\Auth\BaseUserIdentity::getRoles
     * @todo   Implement testGetRoles().
     */
    public function testGetRoles()
    {
        $this->assertEquals(1, $this->user->getRoles() & 1);
    }

    /**
     * @covers Fobia\Auth\BaseUserIdentity::getUsername
     * @todo   Implement testGetUsername().
     */
    public function testGetUsername()
    {
        $this->assertEquals('test@test', $this->user->getUsername());
    }

    /**
     * @covers Fobia\Auth\BaseUserIdentity::getPassword
     * @todo   Implement testGetPassword().
     */
    public function testGetPassword()
    {
        $this->user->setUserData(array('password' => 'password'));
        $this->assertEquals('password', $this->user->getPassword());
    }

    /**
     * @covers Fobia\Auth\BaseUserIdentity::setUserData
     * @todo   Implement testSetUserData().
     */
    public function testSetUserData()
    {
        $this->user->setUserData(array('login' => 'new login'));
        $this->assertEquals('new login', $this->user->getUsername());
    }

    /**
     * @covers Fobia\Auth\BaseUserIdentity::isRole
     * @todo   Implement testIsRole().
     */
    public function testIsRole()
    {
        $this->assertTrue($this->user->isRole(1));
    }

    /**
     * @covers Fobia\Auth\BaseUserIdentity::isAccess
     * @todo   Implement testIsAccess().
     */
    public function testIsAccess()
    {
        $this->assertFalse($this->user->isAccess('none'));
    }

    /**
     * @covers Fobia\Auth\BaseUserIdentity::getAccess
     * @todo   Implement testGetAccess().
     */
    public function testGetAccess()
    {
        $this->assertNull($this->user->getAccess('none'));
    }

    /**
     * @covers Fobia\Auth\BaseUserIdentity::readData
     * @todo   Implement testReadData().
     */
//    public function testReadData()
//    {
//        // Remove the following lines when you implement this test.
//        $this->markTestIncomplete(
//          'This test has not been implemented yet.'
//        );
//    }

    /**
     * @covers Fobia\Auth\BaseUserIdentity::setOnline
     * @todo   Implement testSetOnline().
     */
//    public function testSetOnline()
//    {
//
//    }
}
