<?php
namespace Fobia\DataBase\Query;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-08-08 at 03:36:01.
 */
class QueryUpdateTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var \Fobia\DataBase\Handler\MySQL
     */
    protected $db;

    /**
     * @var \Fobia\DataBase\Query\QuerySelect
     */
    protected $q;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        if ( ! $this->db) {
            $this->db = \Fobia\DataBase\DbFactory::create('mysql://root@localhost/mysql');
        }
        $this->q = $this->db->createUpdateQuery();
    }

    /**
     * @covers Fobia\DataBase\Query\QueryUpdate::orderBy
     * @todo   Implement testOrderBy().
     */
    public function testOrderBy()
    {
        $q     = $this->q;
        $q->update('test')
                ->set('duration', $this->db->quote(2) )
                ->where($q->expr->eq('id', $this->db->quote(1)))
                ->orderBy("timestamp", 'DESC')
                ;
        $this->assertRegExp("/ORDER BY timestamp DESC$/", $q->getQuery());
    }

    /**
     * @covers Fobia\DataBase\Query\QueryUpdate::limit
     * @todo   Implement testLimit().
     */
    public function testLimit()
    {
        $q     = $this->q;
        $q->update('test')
                ->set('duration', $this->db->quote(2) )
                ->where($q->expr->eq('id', $this->db->quote(1)))
                ->orderBy("timestamp", 'DESC')
                ->limit(1)
                ;
        $this->assertRegExp("/LIMIT 1$/", $q->getQuery());
    }

    /**
     * @covers Fobia\DataBase\Query\QueryUpdate::getQuery
     * @todo   Implement testGetQuery().
     */
    public function testGetQuery()
    {
        $q     = $this->q;
        $q->update('test')
                ->set('id', $this->db->quote(2) )
                ->where($q->expr->eq('id', $this->db->quote(1)))
                ;
        $this->assertEquals("UPDATE test SET id = '2' WHERE id = '1'", $q->getQuery());
    }
}
