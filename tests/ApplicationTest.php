<?php

namespace Fobia\Base;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-06-22 at 10:12:39.
 */
class ApplicationTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var \Fobia\Base\Application
     */
    protected $app;

    protected function createApp($env = array(), $settings = array())
    {
        $env = array_merge(array(
            'SCRIPT_NAME'  => '/test/index.php',
            'REQUEST_URI'  => '/test/phpunit?one=foo&two=bar',
            'QUERY_STRING' => 'one=foo&two=bar',
                ), (array) $env);

        $r        = include __DIR__ . '/../app/config/config.php';
        $settings = array_merge((array) $r, (array) $settings);

        $app = new \Fobia\Base\Application($settings);

        $app['environment'] = function () use ($env) {
            $env = new \Slim\Environment();
            $env->mock((array) $env);
            return $env;
        };

        return $app;
    }

    protected function initializeApp($env = array(), $app = array())
    {
        $this->app = $this->createApp((array) $env, (array) $app);
    }

    public function setUp()
    {
        // Remove environment mode if set
        unset($_ENV['SLIM_MODE']);

        // Reset session
        $_SESSION = array();

        // Initialize app
        $this->initializeApp();
    }
    /*     * **********************************************
     * INSTANTIATION
     * ********************************************** */

    /**
     * Test version constant is string
     */
    public function testHasVersionConstant()
    {
        $this->assertTrue(is_string(\Fobia\Base\Application::VERSION));
    }

    public function testDataBase()
    {
        $app = $this->app;
        $this->assertInstanceOf('\\PDO', $app->db);
        $this->assertRegExp('/5\.[\d]/',
                            $app->db->getAttribute(\PDO::ATTR_CLIENT_VERSION));
    }
    /*     * **********************************************
     * SETTINGS
     * ********************************************** */

    public function testRoutePath()
    {
        $r = array(
            'REQUEST_URI'  => '/test/test1?one=foo',
            'QUERY_STRING' => 'one=foo',
        );

        $app = $this->createApp();
        var_dump($app['environment']);
    }
}